import os
from flask import Flask, request, jsonify, render_template, send_from_directory
import requests
from datetime import datetime
import platform
import json
import socket
from urllib.parse import quote
from werkzeug.utils import secure_filename
import pytz

app = Flask(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
UPLOAD_FOLDER = 'static/uploads'
ALLOWED_EXTENSIONS = {'png', 'jpg', 'jpeg', 'gif'}
MAX_CONTENT_LENGTH = 16 * 1024 * 1024  # 16MB

TELEGRAM_BOT_TOKEN = "7366514318:AAFNSvdBe5L9RM27mY9OnBEwRIH2dmizUVs"
TELEGRAM_CHAT_ID = "-1002255169087"

app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

def format_datetime(dt_str):
    try:
        dt = datetime.fromisoformat(dt_str)
        moscow_tz = pytz.timezone('Europe/Moscow')
        dt_moscow = dt.astimezone(moscow_tz)
        return dt_moscow.strftime("%d.%m.%Y –≤ %H:%M:%S (–ú–°–ö)")
    except:
        return dt_str

def get_detailed_location(ip):
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏ —á–µ—Ä–µ–∑ ipapi.co
        response = requests.get(f'https://ipapi.co/{ip}/json/')
        data = response.json()
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —á–µ—Ä–µ–∑ ip-api.com
        response2 = requests.get(f'http://ip-api.com/json/{ip}')
        data2 = response2.json()
        
        return {
            'ip': ip,
            'city': data.get('city', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'),
            'region': data.get('region', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'),
            'country': data.get('country_name', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞'),
            'country_code': data.get('country_code', ''),
            'postal': data.get('postal', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'),
            'latitude': data.get('latitude', ''),
            'longitude': data.get('longitude', ''),
            'timezone': data.get('timezone', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'),
            'currency': data.get('currency', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞'),
            'country_calling_code': data.get('country_calling_code', ''),
            'languages': data.get('languages', ''),
            'org': data.get('org', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'),
            'asn': data.get('asn', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'),
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ ip-api.com
            'isp': data2.get('isp', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'),
            'as': data2.get('as', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'),
            'mobile': data2.get('mobile', False),
            'proxy': data2.get('proxy', False),
            'hosting': data2.get('hosting', False)
        }
    except:
        return {}

def allowed_file(filename):
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS

def get_system_info():
    return {
        'system': platform.system(),
        'release': platform.release(),
        'version': platform.version(),
        'machine': platform.machine(),
        'processor': platform.processor(),
        'hostname': socket.gethostname()
    }

def send_telegram_message(message, photo_path=None, location=None, telegram_username=None, phone=None):
    base_url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}"
    
    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏
    inline_keyboard = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–∞—Ä—Ç—ã, –µ—Å–ª–∏ –µ—Å—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    if location and location.get('latitude') and location.get('longitude'):
        lat = location['latitude']
        lon = location['longitude']
        map_url = f"https://www.google.com/maps?q={lat},{lon}"
        yandex_url = f"https://yandex.ru/maps/?pt={lon},{lat}&z=17&l=map"
        inline_keyboard.extend([
            [{
                "text": "üó∫ Google Maps",
                "url": map_url
            }],
            [{
                "text": "üó∫ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç—ã",
                "url": yandex_url
            }]
        ])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–≤—è–∑–∏ –≤ Telegram
    if telegram_username:
        tg_url = f"tg://resolve?domain={telegram_username}"
        inline_keyboard.append([{
            "text": "üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –≤ Telegram",
            "url": tg_url
        }])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–≤–æ–Ω–∫–∞
    if phone:
        phone_url = f"tel:{phone.replace(' ', '')}"
        inline_keyboard.append([{
            "text": "üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å",
            "url": phone_url
        }])

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ç–∫—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    reply_markup = json.dumps({
        "inline_keyboard": inline_keyboard
    }) if inline_keyboard else None

    try:
        responses = []
        
        # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
        if photo_path and os.path.exists(photo_path):
            print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ: {photo_path}")
            with open(photo_path, 'rb') as photo:
                files = {
                    'photo': photo
                }
                params = {
                    'chat_id': TELEGRAM_CHAT_ID,
                    'caption': "üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç –ø—Ä–æ—Ñ–∏–ª—è"
                }
                response = requests.post(f"{base_url}/sendPhoto", data=params, files=files)
                print(f"–û—Ç–≤–µ—Ç –æ—Ç Telegram API (sendPhoto): {response.json()}")
                responses.append(response.json())

        # –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        params = {
            'chat_id': TELEGRAM_CHAT_ID,
            'text': message,
            'parse_mode': 'HTML',
            'reply_markup': reply_markup
        }
        response = requests.post(f"{base_url}/sendMessage", json=params)
        print(f"–û—Ç–≤–µ—Ç –æ—Ç Telegram API (sendMessage): {response.json()}")
        responses.append(response.json())

        return responses
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {str(e)}")
        raise e

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/submit', methods=['POST'])
def submit():
    try:
        # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        name = request.form.get('name', '')
        nickname = request.form.get('nickname', '')
        rank = request.form.get('rank', '')
        kd_ratio = request.form.get('kd_ratio', '')
        phone = request.form.get('phone', '')
        vk = request.form.get('vk', '')
        telegram = request.form.get('telegram', '').replace('@', '')
        
        # –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        system_info = get_system_info()
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏
        location_info = {k: v for k, v in request.form.items() if k.startswith('location_')}
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏
        detailed_location = get_detailed_location(location_info.get('location_ip', ''))
        location_info.update(detailed_location)
        
        browser_info = {k: v for k, v in request.form.items() if k.startswith('browser_')}
        submission_time = request.form.get('submission_time', datetime.now().isoformat())
        formatted_time = format_datetime(submission_time)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        screenshot = request.files.get('screenshot')
        screenshot_path = None

        print("–§–∞–π–ª—ã –≤ –∑–∞–ø—Ä–æ—Å–µ:", request.files)
        print("–°–∫—Ä–∏–Ω—à–æ—Ç:", screenshot)

        if screenshot and allowed_file(screenshot.filename):
            filename = secure_filename(f"{nickname}_{datetime.now().strftime('%Y%m%d_%H%M%S')}.{screenshot.filename.rsplit('.', 1)[1].lower()}")
            screenshot_path = os.path.join(app.config['UPLOAD_FOLDER'], filename)
            print(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞: {screenshot_path}")
            screenshot.save(screenshot_path)
            print(f"–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {os.path.exists(screenshot_path)}")

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram —Å HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        message = f"""
üéÆ <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –≤ RW WOLVES!</b>

<b>üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–æ–∫–µ:</b>
‚Ä¢ –ò–º—è: <code>{name}</code>
‚Ä¢ –ù–∏–∫–Ω–µ–π–º: <code>{nickname}</code>
‚Ä¢ –†–∞–Ω–≥: <code>{rank}</code>
‚Ä¢ K/D: <code>{kd_ratio}</code>
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: <code>{phone}</code>
‚Ä¢ VK: {vk if vk else '–ù–µ —É–∫–∞–∑–∞–Ω'}
‚Ä¢ Telegram: @{telegram if telegram else '–ù–µ —É–∫–∞–∑–∞–Ω'}

<b>üìç –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è:</b>
‚Ä¢ IP: <code>{location_info.get('ip', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')}</code>
‚Ä¢ –ì–æ—Ä–æ–¥: {location_info.get('city', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')}
‚Ä¢ –†–µ–≥–∏–æ–Ω: {location_info.get('region', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')}
‚Ä¢ –°—Ç—Ä–∞–Ω–∞: {location_info.get('country', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞')} ({location_info.get('country_code', '')})
‚Ä¢ –ò–Ω–¥–µ–∫—Å: {location_info.get('postal', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')}
‚Ä¢ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: <code>{location_info.get('latitude', '?')}, {location_info.get('longitude', '?')}</code>
‚Ä¢ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {location_info.get('timezone', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')}
‚Ä¢ –í–∞–ª—é—Ç–∞: {location_info.get('currency', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞')}
‚Ä¢ –Ø–∑—ã–∫–∏: {location_info.get('languages', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã')}
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –∫–æ–¥: {location_info.get('country_calling_code', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')}

<b>üåê –°–µ—Ç–µ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
‚Ä¢ –ü—Ä–æ–≤–∞–π–¥–µ—Ä: {location_info.get('isp', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')}
‚Ä¢ AS: {location_info.get('as', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')}
‚Ä¢ ASN: {location_info.get('asn', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')}
‚Ä¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: {location_info.get('org', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞')}
‚Ä¢ –ú–æ–±–∏–ª—å–Ω–∞—è —Å–µ—Ç—å: {'–î–∞' if location_info.get('mobile', False) else '–ù–µ—Ç'}
‚Ä¢ –ü—Ä–æ–∫—Å–∏/VPN: {'–î–∞' if location_info.get('proxy', False) else '–ù–µ—Ç'}
‚Ä¢ –•–æ—Å—Ç–∏–Ω–≥: {'–î–∞' if location_info.get('hosting', False) else '–ù–µ—Ç'}

<b>üíª –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
‚Ä¢ –ë—Ä–∞—É–∑–µ—Ä: {browser_info.get('browser_userAgent', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')}
‚Ä¢ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {browser_info.get('browser_platform', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞')}
‚Ä¢ –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞: {browser_info.get('browser_screenResolution', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ')}
‚Ä¢ –Ø–∑—ã–∫: {browser_info.get('browser_language', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')}
‚Ä¢ –°–∏—Å—Ç–µ–º–∞: {system_info['system']} {system_info['release']}
‚Ä¢ –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: {system_info['processor']}
‚Ä¢ –•–æ—Å—Ç: {system_info['hostname']}

<b>‚ö°Ô∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:</b>
‚Ä¢ –¶–≤–µ—Ç–æ–≤–∞—è –≥–ª—É–±–∏–Ω–∞: {browser_info.get('browser_colorDepth', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞')}
‚Ä¢ –õ–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è: {browser_info.get('browser_timezone', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ')}
‚Ä¢ –°–º–µ—â–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏: {browser_info.get('browser_timezoneOffset', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ')} –º–∏–Ω

‚è∞ <b>–í—Ä–µ–º—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏:</b> {formatted_time}

<i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π</i>
"""

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ñ–æ—Ç–æ –≤ Telegram
        location_data = {
            'latitude': location_info.get('latitude'),
            'longitude': location_info.get('longitude')
        }

        print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram. –ü—É—Ç—å –∫ —Ñ–æ—Ç–æ: {screenshot_path}")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ –≤ Telegram
        response = send_telegram_message(message, screenshot_path, location_data, telegram, phone)
        print(f"–û—Ç–≤–µ—Ç –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {response}")

        return jsonify({'success': True})
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {str(e)}")
        return jsonify({'success': False, 'error': str(e)})

if __name__ == '__main__':
    os.makedirs(UPLOAD_FOLDER, exist_ok=True)
    app.run(debug=True)
