from flask import Flask, request, jsonify, render_template, redirect
import requests
import os
import json
import logging
from werkzeug.utils import secure_filename
from database import init_db, save_application, get_application_status

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = 'static/uploads'
app.config['MAX_CONTENT_LENGTH'] = 16 * 1024 * 1024  # 16MB max-limit

TELEGRAM_BOT_TOKEN = "7366514318:AAFNSvdBe5L9RM27mY9OnBEwRIH2dmizUVs"
TELEGRAM_CHAT_ID = "-1002255169087"
ALLOWED_EXTENSIONS = {'png', 'jpg', 'jpeg'}

def allowed_file(filename):
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS

def send_to_telegram(data, photo_path):
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å HTML-—Ä–∞–∑–º–µ—Ç–∫–æ–π
    message = f"""<b>üéÆ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –≤ –≥–∏–ª—å–¥–∏—é RW WOLVES!</b>

<b>üë§ –ò–≥—Ä–æ–∫:</b> {data['nickname']}
<b>üÜî ID:</b> {data['account_id']}
<b>üëë –†–∞–Ω–≥:</b> {data['rank']}
<b>üìä –£—Ä–æ–≤–µ–Ω—å:</b> {data['level']}
<b>‚è≥ –û–ø—ã—Ç –∏–≥—Ä—ã:</b> {data['experience']} –º–µ—Å.

<b>üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ K/D: {data['kd']}
‚Ä¢ –í–∏–Ω—Ä–µ–π—Ç: {data['winrate']}
‚Ä¢ –ò–≥—Ä–æ–≤–æ–µ –≤—Ä–µ–º—è: {data['playtime']} —á/–¥–µ–Ω—å

<b>üì± –ö–æ–Ω—Ç–∞–∫—Ç—ã:</b>
‚Ä¢ Telegram: {data['telegram']}
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: {data['phone']}"""

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–≤—è–∑–∏ —Å –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–º
    telegram_username = data['telegram'].replace('@', '')
    keyboard = {
        "inline_keyboard": [[
            {
                "text": "üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –∫–∞–Ω–¥–∏–¥–∞—Ç—É",
                "url": f"https://t.me/{telegram_username}"
            }
        ]]
    }

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
        with open(photo_path, 'rb') as photo:
            files = {'photo': photo}
            params = {
                'chat_id': TELEGRAM_CHAT_ID,
                'caption': message,
                'parse_mode': 'HTML',
                'reply_markup': json.dumps(keyboard)
            }
            response = requests.post(
                f'https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendPhoto',
                data=params,
                files=files
            )
            
        if response.status_code == 200:
            message_id = response.json()['result']['message_id']
            return True, message_id
        else:
            logger.error(f"Failed to send message to Telegram: {response.text}")
            return False, None
            
    except Exception as e:
        logger.error(f"Error sending message to Telegram: {str(e)}")
        return False, None

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/submit', methods=['POST'])
def submit():
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
        data = {
            'nickname': request.form['nickname'],
            'account_id': request.form['account_id'],
            'rank': request.form['rank'],
            'level': request.form['level'],
            'experience': request.form['experience'],
            'telegram': request.form['telegram'],
            'phone': request.form['phone'],
            'kd': request.form['kd'],
            'winrate': request.form['winrate'],
            'playtime': request.form['playtime']
        }

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω–æ –ª–∏ —Ñ–æ—Ç–æ
        if 'profile_photo' not in request.files:
            return jsonify({'success': False, 'error': '–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è'})
            
        photo = request.files['profile_photo']
        if photo.filename == '':
            return jsonify({'success': False, 'error': '–ù–µ –≤—ã–±—Ä–∞–Ω —Ñ–∞–π–ª'})
            
        if photo and allowed_file(photo.filename):
            filename = secure_filename(photo.filename)
            photo_path = os.path.join(app.config['UPLOAD_FOLDER'], filename)
            
            # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            os.makedirs(app.config['UPLOAD_FOLDER'], exist_ok=True)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ
            photo.save(photo_path)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
            success, message_id = send_to_telegram(data, photo_path)
            if success:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                save_application(
                    account_id=data['account_id'],
                    nickname=data['nickname'],
                    telegram=data['telegram'],
                    message_id=message_id
                )
                return jsonify({'success': True})
            else:
                return jsonify({'success': False, 'error': '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram'})
        else:
            return jsonify({'success': False, 'error': '–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞'})
            
    except Exception as e:
        logger.error(f"Error processing submission: {str(e)}")
        return jsonify({'success': False, 'error': str(e)})

@app.route('/check_status', methods=['POST'])
def check_status():
    try:
        account_id = request.json.get('account_id')
        status = get_application_status(account_id)
        return jsonify({'status': status if status else 'not_found'})
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞: {str(e)}")
        return jsonify({'status': 'error', 'message': str(e)})

if __name__ == '__main__':
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    init_db()
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    os.makedirs(app.config['UPLOAD_FOLDER'], exist_ok=True)
    app.run(debug=True)
